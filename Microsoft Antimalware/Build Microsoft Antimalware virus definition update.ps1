Try 
{
    # Load Windows Forms and initialize visual styles
    [void][System.Reflection.Assembly]::LoadWithPartialName("System.Windows.Forms")
    [System.Windows.Forms.Application]::EnableVisualStyles()
    
    # Get scripts folder
    $cd = Split-Path $PSCommandPath
    $tehscript = Split-Path $PSCommandPath -Leaf
    
    # Prepare hand-off folder
    $HandOffPath = Join-Path $cd 'Handoff'
    $HandOffFiles = Join-Path $HandOffPath '*'
    if (Test-Path -Path $HandOffPath) {
        # It exists; delete its contents
        Remove-Item $HandOffFiles -ErrorAction Stop
    }
    else
    {
        # It doesn't exist; create it
        New-Item -Path $HandOffPath -ItemType Directory -ErrorAction Stop
    }
    
    # Check Windows verison
    $vers=[System.Environment]::OSVersion.Version
    If (($vers.Major -eq 6) -and ($vers.Minor -le 1)) {
        # This is Windows Vista or Windows 7. We're dealing with Microsoft Security Essentials.
        $defUpdFolder = $env:ProgramData+"\Microsoft\Microsoft Antimalware\Definition Updates\`{*`}"
    } elseif ((($vers.Major -eq 6) -and ($vers.Minor -ge 2)) -or ($vers.Major -eq 10))
    {
        # This is Windows 8.x or 10. We're dealing with Windows Defender.
        $defUpdFolder = $env:ProgramData+"\Microsoft\Windows Defender\Definition Updates\`{*`}"
    } else
    {
        # This is probably Windows XP or earlier
        $result=[System.Windows.Forms.MessageBox]::Show("You are not running a supported operating system", $tehscript, "OK", "Error");
        break;
    }

    # Collect definitions
    Resolve-Path $defUpdFolder | ForEach-Object {
        $SourcePath1=Join-Path $_ '*'
        Write-Host "Copying" $SourcePath1
        Copy-Item -Path $SourcePath1 -Destination $HandOffPath -Force
    }
 
    #We are about to execute legacy code, so...
    Push-Location $cd

    #Put definitions in a SFX targetting Microsoft Security Essentials
    Get-ChildItem * -include MSE-Handoff.exe | Remove-Item
    Write-Host "Creating MSE package... " -NoNewline
    $CompressionProcess=Start-Process WinRAR.exe 'a -ep1 -s -t -sfx -zSFX-commands-w7.txt -iadm MSE-Handoff.exe ".\Handoff\*"' -Wait -PassThru
    if ($CompressionProcess.ExitCode -eq 0)
        {Write-Host "Done."}
    elseif ($CompressionProcess.ExitCode -eq 255)
        {Write-Host "Canceled by user."}
    else
        {Write-Host "Error code:" $CompressionProcess.ExitCode}
    
    #Put definitions in a SFX targetting Windows Defender
    Get-ChildItem * -include Defender-Handoff.exe | Remove-Item
    Write-Host "Creating Defender package... " -NoNewline
    $CompressionProcess=Start-Process WinRAR.exe 'a -ep1 -s -t -sfx -zSFX-commands-w8.txt -iadm Defender-Handoff.exe ".\Handoff\*"' -Wait -PassThru
    if ($CompressionProcess.ExitCode -eq 0)
        {Write-Host "Done."}
    elseif ($CompressionProcess.ExitCode -eq 255)
        {Write-Host "Canceled by user."}
    else
        {Write-Host "Error code:" $CompressionProcess.ExitCode}

    #Discard collected definitions
    Remove-Item $HandOffFiles

    #Return to whence you came!
    Pop-Location

    #Pause, for effect...
    pause
}
Catch
{
    $result=[System.Windows.Forms.MessageBox]::Show("Error!`r`r"+$Error[0], $tehscript, "OK", "Error");
    break;
}